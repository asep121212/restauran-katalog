{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";kYACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QADwD,SAChDC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC1D,IAwBH,QArB8B,CACtBC,eADsB,SACPC,GAAI,oGAClBA,EADkB,iEAITP,EAJS,uCAIEQ,IAAIT,EAAmBQ,IAJzB,4CAKxB,EACKE,kBAPsB,WAOF,iHACVT,EADU,uCACCU,OAAOX,IADR,4CAEzB,EACKY,cAVsB,SAURC,GAAY,oGACzBA,EAAWC,eAAe,MADD,iEAIhBb,EAJgB,uCAILc,IAAIf,EAAmBa,IAJlB,4CAK/B,EACKG,gBAhBsB,SAgBNR,GAAI,iHACVP,EADU,8CACQD,EAAmBQ,IAD3B,4CAEzB,mSC5BH,4wNAeA,QAdMS,wMACJ,sGACyBC,MAAMC,EAAAA,EAAAA,OAD/B,cACQC,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaC,aAHtB,4HAMA,WAAqBf,GAArB,yFACyBU,MAAMC,EAAAA,EAAAA,OAAoBX,IADnD,cACQY,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaT,YAHtB,yJAPII,gDCUN,QAVqB,CACnBO,MAAO,GAAF,OAAK1B,EAAAA,EAAAA,SAAL,QACL2B,MAAO,CACLC,MAAO,SAAClB,GAAD,gBAAWV,EAAAA,EAAAA,eAAX,iBAAyCU,EAAzC,EACPmB,OAAQ,SAACnB,GAAD,gBAAWV,EAAAA,EAAAA,eAAX,kBAA0CU,EAA1C,EACRoB,MAAO,SAACpB,GAAD,gBAAWV,EAAAA,EAAAA,eAAX,iBAAyCU,EAAzC,GAETqB,OAAQ,SAACrB,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,kBAAoCU,EAApC,mCCDV,QARe,CACbsB,SAAU,uCACVC,eAAgB,8CAChBlC,cAAe,gBACfE,iBAAkB,EAClBiC,WAAY,gBACZhC,kBAAmB,0GCMfiC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,kBAC/BC,OAAQF,SAASC,cAAc,OAC/BE,QAASH,SAASC,cAAc,UAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACL,IAEDF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACD","sources":["webpack://nordfoodies/./src/scripts/data/favorite-restaurant-idb.js","webpack://nordfoodies/./src/scripts/data/restaurant-source.js","webpack://nordfoodies/./src/scripts/globals/api-endpoint.js","webpack://nordfoodies/./src/scripts/globals/config.js","webpack://nordfoodies/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async fileRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async lawRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deletRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantSource {\r\n  static async flowRestaurant() {\r\n    const response = await fetch(API_ENDPOINT.RESTO);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async inResto(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n}\r\n\r\nexport default RestaurantSource;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  RESTO: `${CONFIG.BASE_URL}list`,\r\n  IMAGE: {\r\n    SMALL: (id) => `${CONFIG.BASE_IMAGE_URL}small/${id}`,\r\n    MEDIUM: (id) => `${CONFIG.BASE_IMAGE_URL}medium/${id}`,\r\n    LARGE: (id) => `${CONFIG.BASE_IMAGE_URL}large/${id}`,\r\n  },\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/',\r\n  DATABASE_NAME: 'restaurant-db',\r\n  DATABASE_VERSION: 1,\r\n  CACHE_NAME: 'Restaurant-V1',\r\n  OBJECT_STORE_NAME: 'restaurant',\r\n};\r\nexport default CONFIG;\r\n","import 'regenerator-runtime';\nimport '../styles/style.css';\nimport '../styles/responsive.css';\nimport './views/templates/components/header';\nimport './views/templates/components/footer';\nimport './views/templates/components/jumbotron';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n \nimport App from './views/app';\nimport swRegister from './utils/sw-register';\n\nconst app = new App({\n  button: document.querySelector('.toggle-button'),\n  drawer: document.querySelector('nav'),\n  content: document.querySelector('main'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","fileRestaurant","id","get","getAllRestaurants","getAll","lawRestaurant","restaurant","hasOwnProperty","put","deletRestaurant","RestaurantSource","fetch","API_ENDPOINT","response","json","responseJson","restaurants","RESTO","IMAGE","SMALL","MEDIUM","LARGE","DETAIL","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}